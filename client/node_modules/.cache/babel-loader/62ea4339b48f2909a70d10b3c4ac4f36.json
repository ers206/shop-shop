{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\class-activities\\\\shop-shop\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nfunction CategoryMenu(_ref) {\n  let {} = _ref;\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Choose a Category:\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, item.name)));\n}\nexport default CategoryMenu;","map":{"version":3,"names":["React","useEffect","useQuery","QUERY_CATEGORIES","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CategoryMenu","state","dispatch","categories","data","categoryData","type","handleClick","id","currentCategory","map","item","_id","name"],"sources":["C:/Users/Owner/Desktop/class-activities/shop-shop/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\n\nfunction CategoryMenu({  }) {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n  \n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n  \n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\nreturn (\n  <div>\n    <h2>Choose a Category:</h2>\n    {categories.map(item => (\n      <button\n        key={item._id}\n        onClick={() => {\n          handleClick(item._id);\n        }}\n      >\n        {item.name}\n      </button>\n    ))}\n  </div>\n);\n}\n\nexport default CategoryMenu;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,iBAAiB,EAAEC,uBAAuB,QAAQ,qBAAqB;AAEhF,SAASC,YAAY,OAAO;EAAA,IAAN,CAAG,CAAC;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,eAAe,EAAE;EAE3C,MAAM;IAAEM;EAAW,CAAC,GAAGF,KAAK;EAE5B,MAAM;IAAEG,IAAI,EAAEC;EAAa,CAAC,GAAGV,QAAQ,CAACC,gBAAgB,CAAC;EAEzDF,SAAS,CAAC,MAAM;IACd;IACA,IAAIW,YAAY,EAAE;MAChB;MACAH,QAAQ,CAAC;QACPI,IAAI,EAAER,iBAAiB;QACvBK,UAAU,EAAEE,YAAY,CAACF;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACE,YAAY,EAAEH,QAAQ,CAAC,CAAC;EAE5B,MAAMK,WAAW,GAAGC,EAAE,IAAI;IACxBN,QAAQ,CAAC;MACPI,IAAI,EAAEP,uBAAuB;MAC7BU,eAAe,EAAED;IACnB,CAAC,CAAC;EACJ,CAAC;EAEH,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAA2B,EAC1BL,UAAU,CAACO,GAAG,CAACC,IAAI,iBAClB;IACE,GAAG,EAAEA,IAAI,CAACC,GAAI;IACd,OAAO,EAAE,MAAM;MACbL,WAAW,CAACI,IAAI,CAACC,GAAG,CAAC;IACvB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEDD,IAAI,CAACE,IAAI,CAEb,CAAC,CACE;AAER;AAEA,eAAeb,YAAY"},"metadata":{},"sourceType":"module"}